Index: src/main/java/lesson2/Calendar/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package lesson2.Calendar;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.GregorianCalendar;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.Stream;\r\n\r\npublic class Main {\r\n    private static int[][] matrixMonth = new int[5][7];\r\n    public static void main(String ...args) {\r\n        //System.out.println(DateTimeFormatter.ISO_INSTANT.format(Calendar.getInstance().toInstant()));\r\n\r\n        // Отобразите календарь текущего месяца в консоли\r\n        // например:\r\n        // пн вт ср чт пт сб вс\r\n        // 30 31 1  2  3  4  5\r\n        // и т.д.\r\n        //\r\n        showCurrentMonth();\r\n    }\r\n\r\n    public static void showCurrentMonth(){\r\n        Calendar calendar = new GregorianCalendar();\r\n        updateMatrix(calendar);\r\n    }\r\n\r\n\r\n    private static void updateMatrix(Calendar calendar){\r\n        int firstDayOfWeek = firstDateOfMonth(calendar); // численное обозначение названия первого дня месяца\r\n        int dayPerMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH); // кол-во дней в месяце\r\n        int previousMont = lastDayPreviousMonth(calendar); // кол-во дней в прошлом месяце\r\n\r\n        int count = 1; //счётчик\r\n\r\n        int [][] matrix = new int[5][7];\r\n\r\n        for (int i = 0 ; i < matrix.length ; i++){\r\n            if (i==0){\r\n                for (int j = matrix[i].length - 1; j >= 0 ; j--) {\r\n                    if(j < firstDayOfWeek-1)\r\n                    matrix[i][j] = previousMont--;\r\n                }\r\n            }\r\n            for (int j = 0; j < matrix[i].length; j++) {\r\n                if(i==0 && j >= firstDayOfWeek-1) {\r\n                    matrix[i][j] = count++;\r\n                }\r\n                if(i != 0 && count<=dayPerMonth){\r\n                    matrix[i][j] = count++;\r\n                }\r\n                if(count>dayPerMonth)count = 1;\r\n            }\r\n        }\r\n\r\n        printMatrix(matrix);\r\n    }\r\n\r\n    private static void printMatrix(int[][] matrix){\r\n        System.out.println();\r\n        System.out.println(Stream.of(DayOfWeek.values()).\r\n                map(DayOfWeek::name).\r\n                collect(Collectors.joining(\"\\t\")));\r\n\r\n        for(int i = 0;i< matrix.length;i++){\r\n            for (int j = 0 ; j < matrix[i].length ; j++){\r\n                System.out.print(matrix[i][j]+\"\\t\");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n    // преобразование дня недели из полученных в Calendar , где день недли начинается с Понедельника.\r\n    private static int convertDayOfWeek(int day){\r\n        if(day == 1)return 7;\r\n        else return day - 1;\r\n    }\r\n    // преобразование месяца из полученных в Calendar.\r\n    private static int convertMonth(int month){\r\n        return month+1;\r\n    }\r\n    // порядковый номер наименования первого дня недели.\r\n    private static int firstDateOfMonth (Calendar calendar){\r\n        calendar.set(Calendar.DATE,1);\r\n        return convertDayOfWeek(calendar.get(Calendar.DAY_OF_WEEK));\r\n    }\r\n    private static int lastDayPreviousMonth(Calendar calendar){\r\n        calendar.add(Calendar.MONTH,-1);\r\n        return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/lesson2/Calendar/Main.java b/src/main/java/lesson2/Calendar/Main.java
--- a/src/main/java/lesson2/Calendar/Main.java	(revision 626f1986828addc322a27e1de9ca0f8247bb41d1)
+++ b/src/main/java/lesson2/Calendar/Main.java	(date 1632079563015)
@@ -82,6 +82,7 @@
         calendar.set(Calendar.DATE,1);
         return convertDayOfWeek(calendar.get(Calendar.DAY_OF_WEEK));
     }
+
     private static int lastDayPreviousMonth(Calendar calendar){
         calendar.add(Calendar.MONTH,-1);
         return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
